--Tablas
--User
CREATE TABLE User (
    idUser INTEGER PRIMARY KEY AUTOINCREMENT,
    userName VARCHAR(50) UNIQUE NOT NULL,
    name VARCHAR(50) NOT NULL,
    password VARCHAR(10) NOT NULL,
    email VARCHAR(100) NOT NULL,
    status INTEGER DEFAULT 1 NOT NULL,
    idUserCreate INTEGER,
    creationDate DATE,
    idUserModify INTEGER,
    modifiedDate DATE,
    FOREIGN KEY (idUserCreate) REFERENCES User (idUser),
    FOREIGN KEY (idUserModify) REFERENCES User (idUser)
);
--FamilyData
CREATE TABLE FamilyData (
    idFamilyData INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(50) NOT NULL,
    lastName VARCHAR(50) NOT NULL,
    relationship VARCHAR(10) NOT NULL,
    phoneNumber VARCHAR(15) NOT NULL,
    email VARCHAR(100) NOT NULL,
    address VARCHAR(300) NOT NULL,
    idStudent INTEGER NOT NULL,
    status INTEGER DEFAULT 1 NOT NULL,
    idUserCreate INTEGER NOT NULL,
    creationDate DATE NOT NULL,
    idUserModify INTEGER,
    modifiedDate DATE,
    FOREIGN KEY (idUserCreate) REFERENCES User (idUser),
    FOREIGN KEY (idUserModify) REFERENCES User (idUser)
);
--Enrollment
CREATE TABLE Enrollment (
    idEnrollment INTEGER PRIMARY KEY AUTOINCREMENT,
    numericalReference INTEGER NOT NULL,
    totalPayment DECIMAL(10, 2) NOT NULL,
    matriculation VARCHAR(50) NOT NULL,
    dueDate DATE NOT NULL,
    semester INTEGER NOT NULL,
    idStudent INTEGER NOT NULL,
    idPeriod INTEGER NOT NULL,
    status INTEGER DEFAULT 1 NOT NULL,
    idUserCreate INTEGER NOT NULL,
    creationDate DATE NOT NULL,
    idUserModify INTEGER,
    modifiedDate DATE,
    FOREIGN KEY (idUserCreate) REFERENCES User (idUser),
    FOREIGN KEY (idUserModify) REFERENCES User (idUser),
    FOREIGN KEY (idPeriod) REFERENCES Period (idPeriod)
);
--LifeInsurance
CREATE TABLE LifeInsurance (
    idLifeInsurance INTEGER PRIMARY KEY AUTOINCREMENT,
    policyNumber VARCHAR(20) NOT NULL,
    insuranceCompany VARCHAR(50) NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    beneficiary VARCHAR(50) NOT NULL,
    deathCoverage DECIMAL(10, 2) NOT NULL,
    disabilityCoverage DECIMAL(10, 2) NOT NULL,
    insurancePayment DECIMAL(10, 2) NOT NULL,
    paymentPeriod INTEGER NOT NULL,
    status INTEGER DEFAULT 1 NOT NULL,
    idUserCreate INTEGER NOT NULL,
    creationDate DATE NOT NULL,
    idUserModify INTEGER,
    modifiedDate DATE,
    FOREIGN KEY (idUserCreate) REFERENCES User (idUser),
    FOREIGN KEY (idUserModify) REFERENCES User (idUser)
);
--Period
CREATE TABLE Period (
    idPeriod INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(50) NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    duration INTEGER NOT NULL,
    status INTEGER DEFAULT 1 NOT NULL,
    idUserCreate INTEGER NOT NULL,
    creationDate DATE NOT NULL,
    idUserModify INTEGER,
    modifiedDate DATE,
    FOREIGN KEY (idUserCreate) REFERENCES User (idUser),
    FOREIGN KEY (idUserModify) REFERENCES User (idUser)
);
--
CREATE TABLE Education (
    idEducation INTEGER PRIMARY KEY AUTOINCREMENT,
    educationLevel VARCHAR(50) NOT NULL,
    startDate DATE NOT NULL,
    endDate DATE NOT NULL,
    idStudent INTEGER NOT NULL,
    status INTEGER DEFAULT 1 NOT NULL,
    idUserCreate INTEGER NOT NULL,
    creationDate DATE NOT NULL,
    idUserModify INTEGER,
    modifiedDate DATE,
    FOREIGN KEY (idUserCreate) REFERENCES User (idUser),
    FOREIGN KEY (idUserModify) REFERENCES User (idUser)
);
--Index
CREATE INDEX IF NOT EXISTS IX_User ON User (idUser);
CREATE INDEX IF NOT EXISTS IX_FamilyData ON FamilyData (idFamilyData);
CREATE INDEX IF NOT EXISTS IX_Enrollment ON Enrollment (idEnrollment);
CREATE INDEX IF NOT EXISTS IX_LifeInsurance ON LifeInsurance (idLifeInsurance);
CREATE INDEX IF NOT EXISTS IX_Period ON Period (idPeriod);
CREATE INDEX IF NOT EXISTS IX_Education ON Education (idEducation);
--Insert
INSERT INTO "User" (userName, name, password, email, idUserCreate, creationDate)
VALUES ('sa', 'Super Admin', 'AdM1nPaSsW', 'superadmin@example.com', null, null),
       ('Yael', 'Yael Reyes', 'Us3rPwd!23', 'yael_r3y@example.com', 1, '2023-12-08');

INSERT INTO FamilyData (name, lastName, relationship, phoneNumber, email, address, idStudent, idUserCreate, creationDate)
VALUES ('Maria', 'Ortiz', 'Madre', '123-456-7890', 'maria@example.com', '123 Main St', 2, 1, '2023-10-23'),
       ('Juana', 'Martinez', 'Madre', '987-654-3210', 'juana@example.com', '456 Elm St', 3, 2, '2023-10-23'),
       ('Enrique', 'Ramos', 'Padre', '555-123-4567', 'enrique@example.com', '789 Oak St', 1, 1, '2023-10-23');

INSERT INTO LifeInsurance (policyNumber, insuranceCompany, startDate, endDate, beneficiary, deathCoverage, disabilityCoverage, insurancePayment, paymentPeriod, idUserCreate, creationDate)
VALUES ('LI-003', '123 Insure', '2023-03-10', '2028-03-09', 'Enrique Ramos', 750000.00, 300000.00, 200.00, 12, 2, '2023-10-23'),
       ('LI-002', 'ABC Insurance', '2023-02-20', '2027-02-19', 'Juana Martinez', 300000.00, 150000.00, 100.00, 6, 1, '2023-10-23'),
       ('LI-005', 'ABC Insurance', '2023-02-21', '2027-02-19', 'Maria Ortiz', 300000.00, 150000.00, 100.00, 6, 2, '2023-10-23');

INSERT INTO Period (name, startDate, endDate, duration, idUserCreate, creationDate)
VALUES ('Fall 2023', '2023-09-01', '2023-12-15', 106, 1, '2023-10-23'),
       ('Spring 2024', '2024-01-15', '2024-05-30', 137, 2, '2023-10-23'),
       ('Summer 2024', '2024-06-15', '2024-08-31', 78, 2, '2023-10-23');

INSERT INTO Education (educationLevel, startDate, endDate, idStudent, idUserCreate, creationDate)
VALUES ('High School', '2018-09-01', '2021-06-30', 3, 2, '2023-10-23'),
       ('Bachelor Degree', '2021-09-01', '2025-06-30', 4, 1, '2023-10-23'),
       ('High School', '2020-09-01', '2024-06-30', 2, 1, '2023-10-23');